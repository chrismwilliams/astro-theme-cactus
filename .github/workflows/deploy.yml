name: "Deploy artefact"
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  confirm-deployment-necessary:
    runs-on: ubuntu-latest

    steps:
      - name: "Check out repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Analyse for changes in the artefact"
        id: analyse
        run: |
          git fetch origin refs/heads/main
          DIFF=$(git diff origin/main -- './*' ':(exclude)./.github/*')
          if [[ -n "$DIFF" ]]; then
            echo "Changes outside of .github detected, deployment will proceed."
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "No changes outside of .github detected, deployment will not proceed."
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi
    outputs:
      deploy: ${{ steps.analyse.outputs.deploy }}

  deploy:
    needs: confirm-deployment-necessary
    if: needs.confirm-deployment-necessary.outputs.deploy == 'true'
    runs-on: ubuntu-latest
    environment: PROD

    steps:
      - name: "Check out repository"
        uses: actions/checkout@v4

      - name: "Install node"
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'

      - name: "Install pnpm"
        uses: pnpm/action-setup@v4
        with:
          version: 8.6.1
          run_install: false

      - name: "Get pnpm store directory"
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: "Set up pnpm cache"
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: pnpm install

      - name: "Build artefact"
        run: pnpm build

      - name: "Prepare secrets for ssh connection and execute deployment"
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          SSH_PASS: ${{ secrets.SSH_PASS }}
          USER: ${{ vars.REMOTE_USER }}
          HOST: ${{ secrets.REMOTE_HOST }}
          DIR: ${{ vars.REMOTE_DIR }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -t ed25519, "$HOST" >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          echo "$SSH_PASS" | ssh-add <(echo "$DEPLOY_KEY")
          rsync -avzr -e 'ssh -o StrictHostKeyChecking=no -v' --delete ./dist/ "${USER}"@"${HOST}":/var/www/html/"${DIR}"

      - name: "Archive artefact"
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: astro-theme-cactus
          retention-days: 7
          path: ${{ github.workspace }}/dist
