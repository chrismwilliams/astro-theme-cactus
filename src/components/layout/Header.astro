---
import { menuLinks } from "@/site-config";
import Image from "astro/components/Image.astro";
import logo from "@/assets/logo.png";
import AnimatedThemeToggler from "@/components/magicui/animated-theme-toggler";

const url = new URL(Astro.request.url);
---

<header class="group relative mb-20 flex items-center md:mb-15 sm:ps-[4.5rem] md:ps-[6rem] lg:ps-[7.5rem]" id="main-header">
	<div class="flex w-full space-between sm:flex-col">
		<a
			aria-current={url.pathname === "/" ? "page" : false}
			class="inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block"
			href="/"
		>
			<Image
				src={logo}
				alt="Logo"
				class="me-3 h-9 w-9 block sm:absolute sm:start-[-5.5rem] md:start-[-6rem] lg:start-[-7rem] sm:me-0 sm:h-16 sm:w-16 md:h-20 md:w-20 lg:h-24 lg:w-24 border border-gray-300 rounded-[16px] sm:rounded-[8px]"
				widths={[36, 64, 80, 96]}
				sizes="(min-width: 1024px) 96px, (min-width: 768px) 80px, (min-width: 640px) 64px, 36px"
			/>
			<span class="text-xl font-bold sm:text-2xl bg-gradient-to-b from-[#39ff14] via-[#00ff90] to-[#00ffea] bg-clip-text text-transparent">kvncyf.me</span>
		</a>
		<nav
			aria-label="Main menu"
			class="absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent shadow backdrop-blur transition-all duration-300 ease-out opacity-0 translate-y-1 pointer-events-none group-[.menu-open]:z-50 group-[.menu-open]:flex group-[.menu-open]:opacity-100 group-[.menu-open]:translate-y-0 group-[.menu-open]:pointer-events-auto sm:hidden"
			id="navigation-menu-mobile"
		>
			{
				menuLinks.map((link) => (
					<a
						aria-current={url.pathname === link.path ? "page" : false}
						class="px-4 py-4 underline-offset-2 hover:underline bg-gradient-to-b from-[#39ff14] via-[#00ff90] to-[#00ffea] bg-clip-text text-transparent"
						data-astro-prefetch
						href={link.path}
					>
						{link.title}
					</a>
				))
			}
		</nav>

        <nav
            aria-label="Main menu"
            class="hidden sm:-ms-2 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:divide-dashed sm:divide-accent"
            id="navigation-menu-desktop"
        >
			{
				menuLinks.map((link) => (
					<a
						aria-current={url.pathname === link.path ? "page" : false}
                      class="px-3 py-0 underline-offset-2 transition-colors text-accent sm:hover:underline hover:bg-gradient-to-b hover:from-[#39ff14] hover:via-[#00ff90] hover:to-[#00ffea] hover:bg-clip-text hover:text-transparent"
						data-astro-prefetch
						href={link.path}
					>
						{link.title}
					</a>
				))
			}
		</nav>
	</div>
    <div class="flex items-center gap-1 sm:gap-2 ms-2">
        <!-- Theme toggler on all viewports -->
        <AnimatedThemeToggler client:only="react" />
    
    <mobile-button>
		<button
			aria-expanded="false"
			aria-haspopup="menu"
			aria-label="Open main menu"
			class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
			id="toggle-navigation-menu"
			type="button"
		>
			<svg
				aria-hidden="true"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
				fill="none"
				focusable="false"
				id="line-svg"
				stroke="currentColor"
				stroke-width="1.5"
				viewBox="0 0 24 24"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path d="M3.75 9h16.5m-16.5 6.75h16.5" stroke-linecap="round" stroke-linejoin="round"
				></path>
			</svg>
			<svg
				aria-hidden="true"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
				class="text-accent"
				fill="none"
				focusable="false"
				id="cross-svg"
				stroke="currentColor"
				stroke-width="1.5"
				viewBox="0 0 24 24"
				xmlns="http://www.w3.org/2000/svg"
				>
					<path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
				</svg>
            </button>
    </mobile-button>
    </div>
</header>
	
	<script>
		import { toggleClass } from "@/utils";
	
		class MobileNavBtn extends HTMLElement {
			private headerEl: HTMLElement;
			private menuOpen: boolean;
			private mobileButtonEl: HTMLButtonElement;
	
			toggleMobileMenu = () => {
				toggleClass(this.headerEl, "menu-open");
				this.menuOpen = !this.menuOpen;
				this.mobileButtonEl.setAttribute("aria-expanded", this.menuOpen.toString());
			};
	
			constructor() {
				super();
				this.headerEl = document.getElementById("main-header")!;
				this.mobileButtonEl = this.querySelector("button") as HTMLButtonElement;
				this.menuOpen = false;
	
				this.mobileButtonEl.addEventListener("click", this.toggleMobileMenu);
			}
		}
	
		customElements.define("mobile-button", MobileNavBtn);
	</script>
